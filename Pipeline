pipeline {
    agent any

    environment {
        CODE_DIRECTORY = "/path/to/code"
        TESTING_ENVIRONMENT = "testing"
        PROD_ENVIRONMENT = "yourname_production"
        EMAIL_NOTIFICATION = "ajayofficial1998@gmail.com"
    }

    stages {
        stage('Build') {
            steps {
                echo 'Build the code by Maven...!'
                echo 'mvn clean package' 
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Execute the Unit Test...!'
                echo 'Unit test using Cucumber'

                echo 'Execute the Integration Test...!'
                echo 'Integration test using Robot Framework'
            }
            post {
                success {
                    mail to: "${env.EMAIL_NOTIFICATION}",
                         subject: 'Unit and Integration Tests SUCCESSFUL',
                         body: 'The Testing executed successfully...!. See attached logs for details.<br>Console Output: ${env.BUILD_URL}console',
                         mimeType: 'text/html'
                }
                failure {
                    mail to: "${env.EMAIL_NOTIFICATION}",
                         subject: 'Tests failed',
                         body: 'The test execution was failed...!. See attached logs for details.<br>Console Output: ${env.BUILD_URL}console',
                         mimeType: 'text/html'
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Integrate SonarQube Analysis...!'
                echo 'Analyzing the code using SonarQube'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Perform Security Scan...!'  
                echo 'Security Scanning using SonarQube'
            }
            post {
                success {
                    mail to: "${env.EMAIL_NOTIFICATION}",
                         subject: 'Security scan was SUCCESSFUL',
                         body: 'The security scan executed successfully...!. See attached logs for details.<br>Console Output: ${env.BUILD_URL}console',
                         mimeType: 'text/html'
                }
                failure {
                    mail to: "${env.EMAIL_NOTIFICATION}",
                         subject: 'Security scan FAILED',
                         body: 'The Security scan execution was failed...!. See attached logs for details.<br>Console Output: ${env.BUILD_URL}console',
                         mimeType: 'text/html'
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploy to the staging using AWS EC2 instance...!' 
                echo 'Deploying it to the staging server'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Run the Integration Test on Staging server...!'
                echo 'Staging of integration test using Postman'
            }
        }
        stage('Deploy to Production') {
            steps {
                 echo 'Application deployment to the Production...! ${PROD_ENVIRONMENT} environment'
                 echo 'Application Deployment using AWS EC2 instance'
            }
        }
    }

    post {
        always {
            emailext (
                subject: 'Pipeline Successful',
                body: '''<html>
                    <body>
                    <p>Build Condition: ${currentBuild.result}</p>
                    <p>Build Number: ${currentBuild.number}</p>
                    <p>Console Log: <a href="${env.BUILD_URL}console">${env.BUILD_URL}console</a></p>
                    </body>
                    </html>''',
                to: 'ajayofficial1998@gmail.com',
                from: 'jenkinsgithub@example.com',
                replyTo: 'jenkinsgithub@example.com',
                mimeType: 'text/html',
                attachLog: true // Attach console log
            )
        }
    }
}
