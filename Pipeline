pipeline {
    agent any

    environment {
        DEFAULT_RECIPIENT = 'ajayofficial1998@gmail.com'
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building the code...!'
                echo 'Compiling the code and generating artifacts'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Execute the Unit Test...!'
                echo 'Unit test using Cucumber'
                echo 'Execute the Integration Test...!'
                echo 'Integration test using Robot Framework'
            }
            post {
                success {
                    emailext(
                        to: "${DEFAULT_RECIPIENT}",
                        subject: 'Unit Test and Integration Test Successful',
                        body: 'The tests executed successfully...! See attached logs for details.<br>Console Output: ${env.BUILD_URL}console',
                        attachLog: true,
                        mimeType: 'text/html',
                        replyTo: '$DEFAULT_RECIPIENT'
                    )
                }
                failure {
                    emailext(
                        to: "${DEFAULT_RECIPIENT}",
                        subject: 'Unit and Integration Tests Failed',
                        body: 'Unit and Integration Tests have failed.',
                        attachLog: true,
                        mimeType: 'text/html',
                        replyTo: '$DEFAULT_RECIPIENT'
                    )
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Integrate SonarQube Analysis...!'
                echo 'Analyzing the code using SonarQube'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Perform Security Scan...!'
                echo 'Security Scanning using SonarQube'
            }
            post {
                success {
                    emailext(
                        to: "${DEFAULT_RECIPIENT}",
                        subject: 'Security Scan Successful',
                        body: 'The security scan executed successfully...! See attached logs for details.<br>Console Output: ${env.BUILD_URL}console',
                        attachLog: true,
                        mimeType: 'text/html',
                        replyTo: '$DEFAULT_RECIPIENT'
                    )
                }
                failure {
                    emailext(
                        to: "${DEFAULT_RECIPIENT}",
                        subject: 'Security Scan Failed',
                        body: 'The security scan execution failed...! See attached logs for details.<br>Console Output: ${env.BUILD_URL}console',
                        attachLog: true,
                        mimeType: 'text/html',
                        replyTo: '$DEFAULT_RECIPIENT'
                    )
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploy to the staging using AWS EC2 instance...!'
                echo 'Deploying it to the staging server'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Run the Integration Test on Staging server...!'
                echo 'Staging of integration test using Postman'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Application deployment to the Production environment...!'
                echo 'Application Deployment using AWS EC2 instance'
            }
        }
    }

    post {
        always {
            echo 'Sending Email Notification'
            emailext(
                to: "${DEFAULT_RECIPIENT}",
                subject: "Pipeline Status: ${currentBuild.result}",
                body: "The pipeline execution resulted in ${currentBuild.result}.",
                attachLog: true,
                mimeType: 'text/html',
                replyTo: '$DEFAULT_RECIPIENT'
            )
        }
    }
}
