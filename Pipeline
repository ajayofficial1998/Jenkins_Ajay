pipeline {
    agent any
    
    triggers {
        githubPush()
    }
    
    stages {
        stage('Build') {
            steps {
                echo 'Building the code with Maven...'
                sh 'mvn clean package'     
            }
            post {
                success {
                    mail to: 'ajayofficial1998@gmail.com',
                    subject: 'Build Successful',
                    body: 'The build executed successfully!'
                }
                failure {
                    mail to: 'ajayofficial1998@gmail.com',
                    subject: 'Build Failed',
                    body: 'The build execution failed!'
                }
            }
        }
        
        stage('Unit Test and Integration Test') {
            steps {
                echo 'Executing Unit Tests...'
                sh 'mvn test' // Assuming unit tests are run using Maven

                echo 'Executing Integration Tests...'
                sh 'mvn verify' // Assuming integration tests are run using Maven
            }
            post {
                success {
                    mail to: 'ajayofficial1998@gmail.com',
                    subject: 'Unit Test and Integration Test Successful',
                    body: 'The tests executed successfully!'
                }
                failure {
                    mail to: 'ajayofficial1998@gmail.com',
                    subject: 'Tests Failed',
                    body: 'The test execution failed!'
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo 'Integrating SonarQube Analysis...'
                sh 'mvn sonar:sonar' // Assuming SonarQube is run using Maven
            }
        }
        
        stage('Security Scan') {
            steps {
                echo 'Performing Security Scan...'
                sh 'mvn sonar:sonar' // Assuming security scan is part of SonarQube
            }
            post {
                success {
                    mail to: 'ajayofficial1998@gmail.com',
                    subject: 'Security Scan Successful',
                    body: 'The security scan executed successfully!'
                }
                failure {
                    mail to: 'ajayofficial1998@gmail.com',
                    subject: 'Security Scan Failed',
                    body: 'The security scan execution failed!'
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to the staging environment using AWS EC2 instance...'
                sh 'deploy_staging.sh' // Replace with your actual deployment script/command
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running Integration Tests on the Staging server...'
                sh 'run_postman_tests.sh' // Replace with your actual test script/command
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo 'Deploying the application to the Production environment...'
                sh 'deploy_production.sh' // Replace with your actual deployment script/command
            }
        }
    }
    
    post {
        always {
            echo "Sending Email Notification"
            emailext subject: 'Pipeline Status: ${currentBuild.result}',
                     body: 'The pipeline execution result is: ${currentBuild.result}',
                     to: 'ajayofficial1998@gmail.com',
                     attachLog: true
        }
    }
}
